apply plugin: 'com.android.application'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply plugin: 'ivy-publish'

version = VERSION_NAME

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.linkedin.android.testbutler"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName VERSION_NAME

        signingConfig signingConfigs.debug
    }

    signingConfigs {
        debug {
            storeFile file("keystore/platform.keystore")
            keyAlias "platform"

            storePassword "android"
            keyPassword "android"
        }
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        abortOnError true
        warningsAsErrors true
        disable 'OldTargetApi', 'GradleDependency'
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        ivyApk(IvyPublication) {
          from new org.gradle.api.internal.java.JavaLibrary(new org.gradle.api.internal.artifacts.publish.DefaultPublishArtifact(project.getName(), 'aar', 'aar', null, new Date(), new File("$buildDir/outputs/apk/${project.getName()}-release.apk"), assemble), project.configurations.compile.getAllDependencies())
          artifact sourcesJar
          artifact javadocJar
        }
        apk(MavenPublication) {

            from new org.gradle.api.internal.java.JavaLibrary(new org.gradle.api.internal.artifacts.publish.DefaultPublishArtifact(project.getName(), 'aar', 'aar', null, new Date(), new File("$buildDir/outputs/apk/${project.getName()}-release.apk"), assemble), project.configurations.compile.getAllDependencies())

            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    description = "A companion apk for stabilizing Android emulators during testing"
                    url 'https://github.com/linkedin/test-butler'
                    scm {
                        url 'https://github.com/linkedin/test-butler'
                        connection 'scm:git:git://github.com/linkedin/test-butler.git'
                        developerConnection 'https://github.com/linkedin/test-butler.git'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'com.linkedin'
                            name 'LinkedIn Corp'
                            email ''
                        }
                    }
                }
            }
        }
    }
}

repositories {
    jcenter()
}

dependencies {
    provided "com.android.support:support-annotations:${rootProject.ext.supportLibrariesVersion}"
}
